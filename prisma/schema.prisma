// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model anggota {
  id Int @id @default(autoincrement())
  nama String
  nirp String @db.VarChar(30) @unique
  pangkat String
  jabatan String
  satker String
  password String

  absensi absensi[]
  backup_absen backup_absen[]
}

enum KeteranganAbsen {
  H
  DIK
  I
  C
  S
  TH
  TGW
  TK
  TAH
}

model absensi {
  id Int @id @default(autoincrement())
  id_anggota Int
  dateTime String
  keterangan KeteranganAbsen
  anggota anggota @relation(fields: [id_anggota],references: [id])
  alasan alasanAbsensi?
}

model alasanAbsensi {
  id Int @id @default(autoincrement())
  id_absen Int @unique
  alasan String
  file String?

  absen absensi @relation(fields: [id_absen],references: [id])
}

model backup_absen {
  id Int @id @default(autoincrement())
  id_anggota Int
  dateTime String
  keterangan KeteranganAbsen

  anggota anggota @relation(fields: [id_anggota],references: [id])
  alasan alasanAbsensiBackup?
}

model alasanAbsensiBackup {
  id Int @id @default(autoincrement())
  id_absen Int @unique
  alasan String
  file String?

  backup_absen backup_absen @relation(fields: [id_absen],references: [id])
}

model admin {
  id Int @id @default(autoincrement())
  nirp String @db.VarChar(12) @unique
  nama String
  password String
}

model admin_satker {
  id Int @id @default(autoincrement())
  nirp String @db.VarChar(12) @unique
  nama String
  satker String
  password String
}